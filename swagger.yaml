swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  # USER/////////////////////////////////////////////////////////////////////////
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  # ACCOUNT/////////////////////////////////////////////////////////////////////////
  /user/accounts:
    post:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: User Accounts API
      description: API to retrieve user accounts
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successully
          schema:
            $ref: '#/definitions/UserAccounts'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}:
    post:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: User transactions API
      description: API to retrieve user accounts
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          description: Account identifier to retrieve transactions related to the account
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Account transactions were successfully retrieved
          schema:
            $ref: '#/definitions/AccountTransactions'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transactions/{accountId}/{transactionId}:
    put:
        security:
          - Bearer: []
        tags:
          - Account Module
        summary: Update user transactions
        description: API to update transaction infos
        parameters:
          - in: header
            name: Authorization
            description: Attach Bearer JWT token
            required: true
            type: string
          - name: accountId
            description: Account identifier to retrieve transactions related to the account
            in: path
            required: true
            type: string
          - name: transactionId
            description: Transaction identifier
            in: path
            required: true
            type: string
          - name: Category
            in: body
            description: Update transaction category
            required: true
            schema:
              $ref: '#/definitions/EditInfos'
        produces:
          - application/json
        responses:
          '200':
            description: Transaction updated successfully
          '400':
            description: Invalid Fields
          '500':
            description: Internal Server Error
    # /////////////////////////////////////////////////////////////////////
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  UserAccounts:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          amount:
            type: string
  AccountTransactions:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          date:
            type: string
            format: date
          description:
            type: string
          amount:
            type: string
          balance:
            type: string
          type:
            type: string
          category:
            type: string
          notes:
            type: string
  EditInfos:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string